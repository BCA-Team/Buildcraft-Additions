buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: "curseforge"
apply plugin: 'forge'
 
ext.buildProps = file "gradle.properties"
 
buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

def curseFile = file 'curse.properties'
def doCurse = curseFile.exists()

if (doCurse) {
    curseFile.withReader {
        def prop = new Properties()
        prop.load(it)
        ext.curseProps = new ConfigSlurper().parse prop
    }
}
 
version = "${config.version.mod}"
group = "com.AEnterprise.BuildcraftAdditions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BuildcraftAdditions-1.7.10"

if (System.getenv().BUILD_NUMBER != null) {
    version += "-Jenkins-${System.getenv().BUILD_NUMBER}"
}

minecraft {
    version = "${config.version.mc}-${config.version.forge}-${config.version.mc}"
    runDir = "eclipse"
    replace "@MODVERSION@", config.version.mod
}

curse {
    doFirst {
        println("Curse.properties found, uploading to curse!")
        apiKey = "${curseProps.api_token}"
        projectId = "${curseProps.project_id}"

        releaseType = "release"
        changelog = """update to BC 7
fix red gilded metal crash when dusts are dissabled
more forge fluid fixes
"""
    }
}

task checkCurse() << {
    if (!doCurse) {
        throw new GradleException("No curse.properties file specified, This task shoudln't be used!")
    }
}

repositories {
    mavenCentral()
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "waila"
        url = "http://mobiusstrip.eu/maven"
    }
    maven {
	    name = "buildcraft"
	    url = "http://mod-buildcraft.com"
    }
    ivy {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-[revision].[ext]"
    }
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
}
 
dependencies {
	compile project("Eureka")
	compile "codechicken:CodeChickenLib:${config.version.mc}-${config.version.ccl}:dev"
	compile "codechicken:CodeChickenCore:${config.version.mc}-${config.version.ccc}:dev"
	compile "codechicken:NotEnoughItems:${config.version.mc}-${config.version.nei}:dev"
	compile "mcp.mobius.waila:Waila:${config.version.waila}_${config.version.mc}"
	//compile "com.mod-buildcraft:buildcraft:${config.version.buildcraft}:dev"
    //compile "framez:Framez:${config.version.framez}:deobf"
	compile name: 'MineTweaker3', version: config.version.minetweaker, ext: 'jar'
    compile name: 'buildcraft', version: config.version.buildcraft, classifier: "dev", ext: 'jar'
	compile fileTree(dir: 'libs', include: '*.jar')
}
 
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
 
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

assemble.dependsOn deobfJar
curse.dependsOn checkCurse


idea { module.outputDir=sourceSets.main.output.classesDir }